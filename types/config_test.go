package types

import (
	"testing"

	"github.com/shamaton/msgpack/v2"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Ptr[T any](v T) *T {
	return &v
}

func TestConfigMsgPack(t *testing.T) {
	// see companion test "test_config_msgpack" on the Rust side
	config := Config{
		WasmLimits: WasmLimits{
			MemoryPageLimit:   Ptr(uint32(15)),
			TableSizeLimit:    Ptr(uint32(20)),
			MaxImports:        Ptr(uint32(100)),
			MaxFunctionParams: Ptr(uint32(0)),
		},
		Cache: CacheOptions{
			BaseDir:               "/tmp",
			AvailableCapabilities: []string{"a", "b"},
			MemoryCacheSize:       NewSize(100),
			InstanceMemoryLimit:   NewSize(100),
		},
	}
	expected := []byte{
		0x82, 0xab, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x87,
		0xb1, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6c,
		0x69, 0x6d, 0x69, 0x74, 0xce, 0x0, 0x0, 0x0, 0xf, 0xb0, 0x74, 0x61, 0x62, 0x6c, 0x65,
		0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0xce, 0x0, 0x0, 0x0,
		0x14, 0xab, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0xce,
		0x0, 0x0, 0x0, 0x64, 0xad, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
		0x6f, 0x6e, 0x73, 0xc0, 0xb3, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
		0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0xce, 0x0, 0x0, 0x0, 0x0,
		0xb9, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x75, 0x6e,
		0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0xc0, 0xb4,
		0x6d, 0x61, 0x78, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
		0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0xc0, 0xa5, 0x63, 0x61, 0x63, 0x68, 0x65, 0x84,
		0xa8, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x69, 0x72, 0xa4, 0x2f, 0x74, 0x6d, 0x70,
		0xb6, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x70,
		0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x92, 0xa1, 0x61, 0xa1, 0x62,
		0xb1, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
		0x73, 0x69, 0x7a, 0x65, 0x64, 0xb5, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
		0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x64,
	}

	bz, err := msgpack.Marshal(config)
	require.NoError(t, err)
	assert.Equal(t, expected, bz)

}
